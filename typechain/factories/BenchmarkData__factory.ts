/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BenchmarkData } from "../BenchmarkData";

export class BenchmarkData__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_governance: string, overrides?: Overrides): Promise<BenchmarkData> {
    return super.deploy(_governance, overrides || {}) as Promise<BenchmarkData>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): BenchmarkData {
    return super.attach(address) as BenchmarkData;
  }
  connect(signer: Signer): BenchmarkData__factory {
    return super.connect(signer) as BenchmarkData__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BenchmarkData {
    return new Contract(address, _abi, signerOrProvider) as BenchmarkData;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "core",
        type: "address",
      },
    ],
    name: "CoreSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "EtherWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "forgeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "forgeAddress",
        type: "address",
      },
    ],
    name: "ForgeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "forgeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "forgeAddress",
        type: "address",
      },
    ],
    name: "ForgeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "TokenWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_forgeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_forgeAddress",
        type: "address",
      },
    ],
    name: "addForge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allMarketsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract IBenchmark",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_forgeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
    ],
    name: "getBenchmarkYieldTokens",
    outputs: [
      {
        internalType: "contract IBenchmarkYieldToken",
        name: "ot",
        type: "address",
      },
      {
        internalType: "contract IBenchmarkYieldToken",
        name: "xyt",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getForgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getForgeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBenchmark",
        name: "_core",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xyt",
        type: "address",
      },
    ],
    name: "isValidXYT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "otTokens",
    outputs: [
      {
        internalType: "contract IBenchmarkYieldToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_forgeId",
        type: "bytes32",
      },
    ],
    name: "removeForge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBenchmark",
        name: "_core",
        type: "address",
      },
    ],
    name: "setCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_swapFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exitFee",
        type: "uint256",
      },
    ],
    name: "setMarketFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_forgeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_xyt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "storeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_forgeId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_ot",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xyt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
    ],
    name: "storeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sendTo",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "xytTokens",
    outputs: [
      {
        internalType: "contract IBenchmarkYieldToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516114363803806114368339818101604052602081101561003357600080fd5b5051806001600160a01b038116610091576040805162461bcd60e51b815260206004820152601760248201527f42656e63686d61726b3a207a65726f2061646472657373000000000000000000604482015290519081900360640190fd5b600080546001600160a01b031916331790556001600160601b031960609190911b166080525060805160601c61134e6100e8600039806106de5280610827528061095b5280610e7f5280610f04525061134e6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638e7cf766116100c3578063cbdfe7cc1161007c578063cbdfe7cc14610460578063ce56c45414610483578063eda15513146104af578063f2f4eb26146104d5578063f8eebe03146104dd578063fd9c6998146104fa5761014d565b80638e7cf7661461033f57806393e3063314610373578063a22d802414610399578063b0772d0b146103b6578063b8b265de1461040e578063c4d66de81461043a5761014d565b80635aa6e675116101155780635aa6e675146102955780635b6ac1a61461029d5780635dc65934146102d75780636284ae4114610309578063800096301461031157806388dd46a1146103375761014d565b80630c3b41ca146101525780631f019ead146101965780632fe9949e146101e45780633ccdbb281461024557806354cf2aeb1461027b575b600080fd5b610194600480360360a081101561016857600080fd5b508035906001600160a01b03602082013581169160408101358216916060820135169060800135610538565b005b6101c8600480360360608110156101ac57600080fd5b508035906001600160a01b036020820135169060400135610656565b604080516001600160a01b039092168252519081900360200190f35b610216600480360360608110156101fa57600080fd5b508035906001600160a01b036020820135169060400135610682565b60405180836001600160a01b03168152602001826001600160a01b031681526020019250505060405180910390f35b6101946004803603606081101561025b57600080fd5b506001600160a01b038135811691602081013591604090910135166106d3565b61028361081f565b60408051918252519081900360200190f35b6101c8610825565b6102c3600480360360208110156102b357600080fd5b50356001600160a01b0316610849565b604080519115158252519081900360200190f35b6101c8600480360360608110156102ed57600080fd5b508035906001600160a01b0360208201351690604001356108d2565b6102836108fe565b6101946004803603602081101561032757600080fd5b50356001600160a01b0316610904565b610283610a73565b6101c86004803603606081101561035557600080fd5b508035906001600160a01b0360208201358116916040013516610a79565b6101946004803603602081101561038957600080fd5b50356001600160a01b0316610aa5565b6101c8600480360360208110156103af57600080fd5b5035610c19565b6103be610c34565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103fa5781810151838201526020016103e2565b505050509050019250505060405180910390f35b6101946004803603604081101561042457600080fd5b50803590602001356001600160a01b0316610c96565b6101946004803603602081101561045057600080fd5b50356001600160a01b0316610d9b565b6101946004803603604081101561047657600080fd5b5080359060200135610e74565b6101946004803603604081101561049957600080fd5b50803590602001356001600160a01b0316610ef9565b610283600480360360208110156104c557600080fd5b50356001600160a01b0316611053565b6101c8611065565b610194600480360360208110156104f357600080fd5b5035611074565b6101946004803603608081101561051057600080fd5b508035906001600160a01b03602082013581169160408101358216916060909101351661117c565b6000546001600160a01b031615610584576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b60008581526002602052604090205485906001600160a01b031633146105e9576040805162461bcd60e51b815260206004820152601560248201527442656e63686d61726b3a206f6e6c7920666f72676560581b604482015290519081900360640190fd5b5060008581526004602090815260408083206001600160a01b03958616808552908352818420858552835281842080549887166001600160a01b0319998a161790559783526005825280832097835296815286822092825291909152939093208054919093169116179055565b60046020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60008381526004602090815260408083206001600160a01b03958616808552908352818420858552835281842054968452600583528184209084528252808320938352929052205491811692911690565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461074d576040805162461bcd60e51b815260206004820152601a60248201527942656e63686d61726b3a206f6e6c7920676f7665726e616e636560301b604482015290519081900360640190fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156107a457600080fd5b505af11580156107b8573d6000803e3d6000fd5b505050506040513d60208110156107ce57600080fd5b5050604080516001600160a01b0380861682526020820185905283168183015290517f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e69181900360600190a1505050565b60065481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080826001600160a01b0316636c6f42396040518163ffffffff1660e01b815260040160206040518083038186803b15801561088557600080fd5b505afa158015610899573d6000803e3d6000fd5b505050506040513d60208110156108af57600080fd5b50516001600160a01b031660009081526001602052604090205415159392505050565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b60075481565b6000546001600160a01b031615610950576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109ca576040805162461bcd60e51b815260206004820152601a60248201527942656e63686d61726b3a206f6e6c7920676f7665726e616e636560301b604482015290519081900360640190fd5b6001600160a01b038116610a1f576040805162461bcd60e51b815260206004820152601760248201527642656e63686d61726b3a207a65726f206164647265737360481b604482015290519081900360640190fd5b600880546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f90db982ad7e7c631cc388cc3f76688bf08ffe8a87e161db50887cf7ef4194dee9181900360200190a150565b600a5490565b60036020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b6000546001600160a01b031615610af1576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3f57600080fd5b505afa158015610b53573d6000803e3d6000fd5b505050506040513d6020811015610b6957600080fd5b50516001600160a01b03163314610bc7576040805162461bcd60e51b815260206004820152601e60248201527f42656e63686d61726b3a206f6e6c79206d61726b657420666163746f72790000604482015290519081900360640190fd5b600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0392909216919091179055565b6002602052600090815260409020546001600160a01b031681565b6060600a805480602002602001604051908101604052809291908181526020018280548015610c8c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c6e575b5050505050905090565b6000546001600160a01b031615610ce2576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b6008546001600160a01b03163314610d38576040805162461bcd60e51b815260206004820152601460248201527342656e63686d61726b3a206f6e6c7920636f726560601b604482015290519081900360640190fd5b6001600160a01b0381166000818152600160209081526040808320869055858352600290915280822080546001600160a01b031916841790555184917f69055c715401f521099c448934ded38665f743c00f6c38849feef24404adc8e591a35050565b6000546001600160a01b03163314610df1576040805162461bcd60e51b81526020600482015260146024820152732132b731b436b0b9359d103337b93134b23232b760611b604482015290519081900360640190fd5b6001600160a01b038116610e46576040805162461bcd60e51b815260206004820152601760248201527642656e63686d61726b3a207a65726f206164647265737360481b604482015290519081900360640190fd5b600080546001600160a01b0319908116909155600880549091166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eee576040805162461bcd60e51b815260206004820152601a60248201527942656e63686d61726b3a206f6e6c7920676f7665726e616e636560301b604482015290519081900360640190fd5b600691909155600755565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f73576040805162461bcd60e51b815260206004820152601a60248201527942656e63686d61726b3a206f6e6c7920676f7665726e616e636560301b604482015290519081900360640190fd5b6040516000906001600160a01b0383169084908381818185875af1925050503d8060008114610fbe576040519150601f19603f3d011682016040523d82523d6000602084013e610fc3565b606091505b505090508061100b576040805162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b604482015290519081900360640190fd5b604080518481526001600160a01b038416602082015281517fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de929181900390910190a1505050565b60016020526000908152604090205481565b6008546001600160a01b031681565b6000546001600160a01b0316156110c0576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b6008546001600160a01b03163314611116576040805162461bcd60e51b815260206004820152601460248201527342656e63686d61726b3a206f6e6c7920636f726560601b604482015290519081900360640190fd5b600081815260026020908152604080832080546001600160a01b031981169091556001600160a01b03168084526001909252808320849055519091829184917f92063d41ec6dbeae87df43b06ca7ee7c3ea274719cfb36ac26d94835afe3d04e91a35050565b6000546001600160a01b0316156111c8576040805162461bcd60e51b815260206004820152601a60248201526000805160206112f9833981519152604482015290519081900360640190fd5b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561121657600080fd5b505afa15801561122a573d6000803e3d6000fd5b505050506040513d602081101561124057600080fd5b50516001600160a01b0316331461129e576040805162461bcd60e51b815260206004820152601e60248201527f42656e63686d61726b3a206f6e6c79206d61726b657420666163746f72790000604482015290519081900360640190fd5b60009384526003602090815260408086206001600160a01b0395861687528252808620938516865292815282852080546001600160a01b03191692909416918217909355835260099091529020805460ff1916600117905556fe42656e63686d61726b3a206e6f7420696e697469616c697a6564000000000000a2646970667358221220e2be35081a034581262048d82652ab1cedf1232945ada59692ee0f2deb95693364736f6c63430007040033";
